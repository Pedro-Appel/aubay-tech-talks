version: '3'

networks:
  local:

services:

  app:
    build:
      context: ./java-resilience4j-lab/
      dockerfile: Dockerfile
    image: app
    container_name: app
    restart: unless-stopped
    networks:
      - local
    healthcheck:
      test: "curl -sS http://app:8080/actuator/health"
      interval: 1s
      timeout: 30s
      retries: 60
    ports:
      - 8080:8080
    ulimits:
      nofile:
        soft: 1048576
        hard: 1048576
  
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - local
    user: root

  client:
    depends_on:
      - app
    build:
      context: ./client/
      dockerfile: Dockerfile
    image: client
    container_name: client
    restart: unless-stopped
    networks:
      - local
  
  grafana:
    image: grafana/grafana:11.2.0
    depends_on:
      - prometheus
      - client
    container_name: grafana
    restart: unless-stopped
    ports:
      - 3000:3000
    networks:
      - local

  grafana-setup:
    build: 
      context: ./grafana/
      dockerfile: Dockerfile
    image: grafana-setup
    container_name: grafana-setup
    restart: on-failure
    depends_on:
      - grafana
    networks:
      - local